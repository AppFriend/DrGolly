‚úÖ Part 1: Protect Working Checkout Code Before Making Visual Changes
Prompt: Set up safe development environment for frontend redesign

Before proceeding with any design or layout updates, I need to preserve the currently working version of the checkout to prevent regressions. Please complete the following steps:

Create a Git savepoint of the current state of the codebase (before any visual updates).

Commit all current changes

Create a tag or labelled commit such as: v1.0-checkout-stable

Create a new Git branch for layout and frontend updates.

Branch name: checkout-layout-redesign

This branch will be used only for frontend refactors

Ensure rollback is easy:

If anything breaks during layout changes, I want to be able to revert to main or reset back to v1.0-checkout-stable instantly without impacting working checkout logic.

Set up visual regression checks (if possible):

(Optional) Add a visual regression testing tool or snapshot testing to ensure the payment logic and core flows are not impacted by design work.

Important:
Do not modify any logic, state management, form handlers, Stripe flows, or backend hooks while working in this branch. Focus solely on layout, structure, and styling.

‚úÖ Part 2: Mobile-First Checkout UI Redesign Prompt (Preserve All Functional Code)
Prompt: Redesign mobile checkout layout in React (Tailwind + shadcn/ui) with strict separation of layout from logic

Now that the codebase is protected, I‚Äôd like to proceed with a mobile-first visual restructure of the checkout screen. This work must be done within the checkout-layout-redesign branch, and follow these strict principles:

üîí Protection Requirements
Do not alter any functional code related to:

Stripe

Checkout logic

API calls

Field validation

Session handling

Coupons

Slack notifications

Purchase routing or database updates

This is a layout-only refactor using Tailwind CSS and existing shadcn/ui components already in the codebase.

üì± Mobile-First Layout Spec (Match current live design at www.drgolly.com/checkout)
Section 1: Your Details

Add grey banner at top:

Text: ‚ÄúYou‚Äôre one step closer to better sleep for your baby!‚Äù

Use Tailwind utility styling for padding, bg-gray-100, centre-aligned

Move Email address and Due Date / Baby DOB fields into this section, directly beneath the banner

Section 2: Your Order

Show product summary from cart:

Image, course title, pricing and a delete (remove) icon

Below that, show:

Expandable ‚ÄúCoupon‚Äù section

Large ‚ÄúAdd‚Äù button to apply coupon

Total price, including real-time discount display (reusing existing logic)

Section 3: Payment

Leave the credit/debit card section exactly as is

Just move it into the visual third block of the layout

Section 4: Billing Details

Move existing billing fields (First Name, Last Name, Phone, Address) here

Show the Terms and Conditions text

‚ÄúPlace Order‚Äù button directly below

Section 5: Guarantees & Testimonials

Add the following static display components at the bottom of the page:

‚Äú30-Day Money Back Guarantee‚Äù banner (reusing asset)

Reviews card grid as seen in provided screenshots

Customer testimonial carousel

Pull from existing components or statically insert using same layout

‚úèÔ∏è Development Guidelines
Follow mobile-first responsive principles using Tailwind

Use flex, gap, and divide utilities to separate sections

Keep all layout changes scoped to the CheckoutPage component

Use existing components like Input, Card, Button, Accordion from shadcn/ui ‚Äî do not rebuild form elements from scratch

If needed, create small presentational wrappers like <SectionContainer /> or <Banner /> for better clarity

‚úÖ Testing and QA
Once implemented:

Test on iOS Safari and Chrome Android to validate spacing, scroll, and field focus behaviour

Confirm all existing form interactions, coupons, payments, and routing still work

Compare layout side-by-side to current live checkout page