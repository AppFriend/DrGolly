Full Testing and Debug Instructions for Public Checkout Flow (Unauthenticated Access)

We are building a public checkout flow for unauthenticated users to purchase courses via direct product-based links (e.g. /checkout/6 for Big Baby Sleep Program). This is designed to allow users referred from other websites to land on a specific checkout page, complete a purchase, and either create a new profile or have the course added to their existing account.

1. Public Access and Routing Validation
Goal: Ensure public URLs are fully accessible without requiring login or token.

Actions:

Confirm that /checkout/:productId routes are publicly accessible:

Example URLs:

https://dr-golly.replit.app/checkout/6

https://dr-golly.replit.app/checkout/5

These must not redirect to /login, even in incognito or logged-out sessions.

Ensure correct course data is loaded based on productId in the URL.

Confirm each course in the database includes a Public_checkout_URL field with the correct path format.

2. Checkout Flow – New Users (No Profile)
Expected Flow:

New user visits /checkout/6 (publicly).

They can view course details and complete payment without logging in.

Upon successful payment, they are redirected to /complete where they:

Set password

Fill in full profile (e.g. name, child info)

Once complete:

They are logged in

Redirected to /home

Purchased course appears under Purchased_courses

3. Checkout Flow – Existing Users
Expected Flow:

User (who already has an account) visits /checkout/6 and enters a known email.

After completing payment:

They are automatically logged in

Redirected to /home

Purchased course is added to existing Purchased_courses

They do not see /complete or get asked to fill in their profile again.

4. Critical Bug: "User Not Authorised" on Payment Attempt
Issue:
Unauthenticated users currently receive a "User not authorised" error when submitting payment.

Console logs show:

js
Copy
Edit
SIMPLIFIED Checkout Debug: {
  windowLocationSearch: '',
  courseIdFromQuery: null,
  courseId: 6,
  isDirectPurchase: true
}
This confirms the frontend correctly identifies the public checkout state, but the backend still expects an authenticated session.

5. Backend Debug and Fix Instructions
Check Payment Handler (e.g. POST /api/create-checkout-session)

This route must:

Not require req.user, session, or auth token when isDirectPurchase: true

Accept email and courseId in the request body

Use those details to create the Stripe checkout session

Replace any logic like:

ts
Copy
Edit
if (!req.user) return res.status(401).json({ message: "Not authorised" });
With:

ts
Copy
Edit
if (!req.user && !req.body.isDirectPurchase) {
  return res.status(401).json({ message: "Not authorised" });
}
Stripe Metadata:

Include email, courseId, and isDirectPurchase in the Stripe session metadata.

6. Webhook Behaviour After Payment
On successful Stripe payment:

Use metadata to check for an existing user via email

If user exists: append course to Purchased_courses

If not: create a partial user record using email and purchased course, allowing them to complete their profile at /complete

7. Final Validation Scenarios
Scenario	Auth	isDirectPurchase	Expected Outcome
Logged-in user	Yes	false	Normal checkout, course added to account
New user	No	true	Payment allowed, redirected to /complete
Existing user (not logged in)	No	true	Payment allowed, user auto-logged in post-pay
Unauthorised without flag	No	false	Blocked (expected)

8. QA and Logging Instructions
Add debug logs to checkout session creation and webhook:

Incoming payload

courseId

email

isDirectPurchase

Confirm no session or token assumptions are breaking flow for public checkout

Ensure frontend detects post-payment state and redirects appropriately to /complete or /home

Summary of Requirements
Public checkout URLs must be available to all users without login

Stripe checkout session must function for both authenticated and unauthenticated users

Backend must allow direct purchase flow without auth

Webhook must process metadata to associate user and course

/complete must guide new users to create their profile

/home must reflect the newly purchased course once setup is complete

Please prioritise fixing the "User not authorised" error, and confirm that full public checkout flow works from /checkout/:id through to /complete and /home with or without an existing user account.